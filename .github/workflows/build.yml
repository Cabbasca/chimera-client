# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          17,    # Current Java LTS & minimum supported by Minecraft
        ]
        # and run on both Linux and Windows
        os: [ubuntu-22.04, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'microsoft'
      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: build mod
        run: ./gradlew build
      - name: Collect version information
        run: |
          shopt -s failglob # print a warning if a glob does not match anything
          set_var() {
            echo $1="$2"
            echo $1="$2" >> $GITHUB_ENV
            declare -g $1="$2"
          }
          set_var JAR_FILE $(eval echo build/libs/${{ env.MOD_ID }}-*-*-*.jar)
          set_var MINECRAFT_VERSION $(echo ${JAR_FILE%.*} | cut -d- -f3)
          set_var MOD_VERSION $(echo ${JAR_FILE%.*} | cut -d- -f4)
          set_var RELEASE_TYPE "$(echo ${GITHUB_REF##*/} | cut -d- -f5)"
          set_var RELEASE_TYPE "$([[ -z $RELEASE_TYPE ]] && echo release || echo $RELEASE_TYPE)"
#      - name: Publish package
#        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
#        with:
#          arguments: publish
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      - name: publish to github releases   
        uses: Kir-Antipov/mc-publish@v3.2 
        with:
           # You don't need this section if you don't want to publish
           # your assets to GitHub
           github-token: ${{ secrets.GITHUB_TOKEN }}
           version: ${{github.sha}}
#      - name: build
#        run: ./gradlew build
#      - name: capture build artifacts
#        if: ${{ runner.os == 'Linux' && matrix.java == '17' }} # Only upload artifacts built from latest java on one OS
#        uses: actions/upload-artifact@v3
#        with:
#          name: Artifacts
#          path: build/libs/
